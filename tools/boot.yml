---
# yamllint disable rule:key-ordering
- name: Boot localhost for building
  hosts: localhost
  vars:
    install_recommends: "{{ false if ansible_facts.os_family == 'Ubuntu' else omit }}"
    llvm_version: 16
    py_version: 3.13
    pythons:
      - python: python3
        venv: /opt/virtualenv
      - python: python{{ py_version }}
        venv: /opt/edge-virtualenv
  tasks:
    - name: Unix block
      become: true
      when: ansible_facts.os_family != 'Darwin'
      block:
        - name: Ubuntu block
          when: ansible_facts.os_family == 'Ubuntu'
          block:
            - name: Install packages
              ansible.builtin.package:
                install_recommends: "{{ install_recommends }}"
                name:
                  - apt
                  - apt-transport-https
                  - apt-utils
                  - aptitude
                  - libapt-pkg6.0
                update_cache: true
            - name: Install packages
              ansible.builtin.package:
                install_recommends: "{{ install_recommends }}"
                name:
                  - software-properties-common
                update_cache: true
        - name: Install packages
          ansible.builtin.package:
            install_recommends: "{{ install_recommends }}"
            name:
              - gnupg
              - lsb-release
              - wget
            update_cache: true
        - name: Install LLVM
          ansible.builtin.package:
            install_recommends: "{{ install_recommends }}"
            name:
              - clang{{ llvm_version }}
              - clang{{ llvm_version }}-analyzer
              - clang{{ llvm_version }}-extra-tools
              - compiler-rt
              - libc++-dev
              - llvm{{ llvm_version }}
            update_cache: true
        - name: Ubuntu block
          when: ansible_facts.os_family == 'Ubuntu'
          block:
            - name: Download LLVM install
              ansible.builtin.get_url:
                dest: /tmp/llvm.sh
                mode: "0640"
                url: https://apt.llvm.org/llvm.sh
            - name: Install LLVM
              ansible.builtin.script:
                chdir: /tmp
                cmd: /tmp/llvm.sh {{ llvm_version }} all
            - name: Clean LLVM script
              ansible.builtin.file:
                path: /tmp/llvm.sh
                state: absent
            - name: Gather LLVM binaries  # noqa: command-instead-of-shell
              ansible.builtin.shell: command -v {{ item }}-{{ llvm_version }}
              register: links
              with_items:
                - clang
                - clang-format
                - clang-tidy
                - clang++
                - llvm-cov
                - llvm-profdata
                - scan-build
            - name: Create LLVM links
              ansible.builtin.file:
                dest: /usr/local/bin/{{ item.item }}
                src: "{{ item.stdout }}"
                state: link
              loop: "{{ links.results }}"
            - name: Install packages
              ansible.builtin.package:
                install_recommends: "{{ install_recommends }}"
                name:
                  - adduser
                  - sudo
        - name: Install packages
          ansible.builtin.package:
            install_recommends: "{{ install_recommends }}"
            name:
              - sudo
              - shadow
            update_cache: true
        - name: Create github group
          ansible.builtin.group:
            gid: 122
            name: github
            state: present
        - name: Create github user
          ansible.builtin.user:
            createhome: true
            group: github
            name: github
            uid: 1001
        - name: Create sudoers.d directory
          ansible.builtin.file:
            mode: "0750"
            path: /etc/sudoers.d
            state: directory
        - name: Add github to sudoers
          ansible.builtin.lineinfile:
            create: true
            dest: /etc/sudoers.d/github
            line: github ALL=(ALL) NOPASSWD:ALL
            mode: "0440"
        - name: Ubuntu block
          when: ansible_facts.os_family == 'Ubuntu'
          block:
            - name: Set build tools list
              ansible.builtin.set_fact:
                build_tools:
                  - autoconf
                  - automake
                  - base-files
                  - base-passwd
                  - brz
                  - bsdutils
                  - build-essential
                  - bzip2
                  - bzr
                  - ca-certificates
                  - cmake
                  - coreutils
                  - curl
                  - dash
                  - debconf
                  - debianutils
                  - default-libmysqlclient-dev
                  - diffutils
                  - dirmngr
                  - docker
                  - dpkg
                  - dpkg-dev
                  - e2fsprogs
                  - fdisk
                  - file
                  - findutils
                  - fish
                  - gcc-12-base
                  - gettext
                  - git
                  - git-lfs
                  - gnupg
                  - gnupg-agent
                  - gpgv
                  - grep
                  - gzip
                  - hostname
                  - htop
                  - imagemagick
                  - imagemagick-6.q16
                  - init-system-helpers
                  - jq
                  - less
                  - libacl1
                  - libattr1
                  - libaudit-common
                  - libaudit1
                  - libblkid1
                  - libbz2-1.0
                  - libbz2-dev
                  - libc-bin
                  - libc6
                  - libcap-ng0
                  - libcap2
                  - libcom-err2
                  - libcrypt1
                  - libcurl4-openssl-dev
                  - libdb-dev
                  - libdb5.3
                  - libdebconfclient0
                  - libdpkg-perl
                  - libevent-dev
                  - libext2fs2
                  - libfdisk1
                  - libffi-dev
                  - libffi8
                  - libgcc-s1
                  - libgcrypt20
                  - libgdbm-dev
                  - libglib2.0-0
                  - libglib2.0-dev
                  - libgmp-dev
                  - libgmp10
                  - libgnutls30
                  - libgpg-error0
                  - libgssapi-krb5-2
                  - libhogweed6
                  - libidn2-0
                  - libjpeg-dev
                  - libk5crypto3
                  - libkeyutils1
                  - libkrb5-3
                  - libkrb5-dev
                  - libkrb5support0
                  - liblz4-1
                  - liblzma-dev
                  - liblzma5
                  - libmagickcore-6.q16-6
                  - libmagickcore-dev
                  - libmagickwand-dev
                  - libmaxminddb-dev
                  - libmount1
                  - libncurses5-dev
                  - libncurses6
                  - libncursesw5-dev
                  - libncursesw6
                  - libnettle8
                  - libnsl2
                  - libp11-kit0
                  - libpam-modules
                  - libpam-modules-bin
                  - libpam-runtime
                  - libpam0g
                  - libpcre2-8-0
                  - libpcre3
                  - libpng-dev
                  - libpq-dev
                  - libreadline-dev
                  - libsasl2-2
                  - libseccomp2
                  - libselinux1
                  - libsemanage-common
                  - libsemanage2
                  - libsepol2
                  - libsmartcols1
                  - libsqlite3-dev
                  - libss2
                  - libssl-dev
                  - libssl3
                  - libstdc++6
                  - libsystemd0
                  - libtasn1-6
                  - libtinfo6
                  - libtirpc-common
                  - libtirpc3
                  - libtool
                  - libudev1
                  - libunistring2
                  - libuuid1
                  - libwebp-dev
                  - libwmf0.2-7
                  - libxml2-dev
                  - libxslt1-dev
                  - libxxhash0
                  - libyaml-dev
                  - libzstd1
                  - locales
                  - login
                  - logsave
                  - lsb-base
                  - lsb-release
                  - lsof
                  - make
                  - man-db
                  - mawk
                  - moreutils
                  - mount
                  - multitail
                  - ncurses-base
                  - ncurses-bin
                  - netbase
                  - ninja-build
                  - openssh-client
                  - passwd
                  - patch
                  - perl-base
                  - procps
                  - ripgrep
                  - sed
                  - sensible-utils
                  - software-properties-common
                  - ssl-cert
                  - stow
                  - sysvinit-utils
                  - tar
                  - time
                  - ubuntu-keyring
                  - unzip
                  - usrmerge
                  - util-linux
                  - wget
                  - xz-utils
                  - zip
                  - zlib1g
                  - zlib1g-dev
        - name: Set build tools list
          ansible.builtin.set_fact:
            build_tools:
              - autoconf
              - automake
              - bzip2
              - ca-certificates
              - cmake
              - coreutils
              - curl
              - diffutils
              - docker
              - file
              - findutils
              - fish
              - gcc
              - gettext
              - git
              - git-lfs
              - grep
              - gzip
              - htop
              - jq
              - less
              - libgcc
              - libstdc++-dev
              - linux-headers
              - make
              - mawk
              - moreutils
              - ninja-build
              - openssh-server
              - patch
              - ripgrep
              - sed
              - tar
              - unzip
              - wget
              - xz
              - zip
        - name: Install build tools
          ansible.builtin.package:
            install_recommends: "{{ install_recommends }}"
            name: "{{ build_tools }}"
        - name: Create directory for virtualenv
          ansible.builtin.file:
            group: github
            mode: "0750"
            owner: github
            path: "{{ item.venv }}"
            state: directory
          with_items: "{{ pythons }}"
        - name: Run user scoped tasks
          become_user: github
          become: true
          block:
            - name: Download rustup install script
              ansible.builtin.get_url:
                dest: /tmp/sh.rustup.rs
                mode: "0750"
                url: https://sh.rustup.rs
            - name: Setup install template
              ansible.builtin.copy:
                content: |
                  #!/bin/sh
                  set -e
                  /tmp/sh.rustup.rs -y --no-modify-path
                  export PATH="/home/github/.cargo/bin:{{ lookup('env', 'PATH') }}"
                  rustup default stable
                  cargo --version
                dest: /tmp/rustup.sh.j2
                group: github
                mode: "0640"
                owner: github
            - name: Setup install script
              ansible.builtin.template:
                dest: /tmp/rustup.sh
                group: github
                mode: "0750"
                owner: github
                src: /tmp/rustup.sh.j2
            - name: Install rustup
              ansible.builtin.script: /tmp/rustup.sh
              args:
                chdir: /home/github
            - name: Cleanup rust install script
              ansible.builtin.file:
                path: "{{ item }}"
                state: absent
              with_items:
                - /tmp/sh.rustup.rs
                - /tmp/rustup.sh
            - name: Setup git config
              ansible.builtin.copy:
                content: |
                  [advice]
                    detachedHead = true
                    ignoredHook = false
                    skippedCherryPicks = false
                  [checkout]
                    defaultRemote = origin
                  [core]
                    ignorecase = true
                  [diff]
                    renameLimit = 1522
                    submodule = diff
                  [fetch]
                    recurseSubmodules = false
                  [init]
                    defaultBranch = stable
                  [pull]
                    rebase = true
                  [push]
                    autoSetupRemote = true
                    default = simple
                    recurseSubmodules = false
                  [rebase]
                    autoSquash = true
                    autoStash = true
                    backend = apply
                    missingCommitsCheck = error
                    updateRefs = true
                  [status]
                    submoduleSummary = true
                  [submodule]
                    recurse = true
                dest: /home/github/.gitconfig
                group: github
                mode: "0640"
                owner: github
            - name: Setup Python virtualenv
              ansible.builtin.pip:
                chdir: /tmp
                requirements: tools/requirements.txt
                virtualenv_command: "{{ item.python }} -m venv"
                virtualenv: "{{ item.venv }}"
              with_items: "{{ pythons }}"
            - name: Bootstrap Python virtualenv
              ansible.builtin.pip:
                chdir: /tmp
                requirements: requirements.txt
                virtualenv: /opt/virtualenv
            - name: Bootstrap Python virtualenv
              ansible.builtin.pip:
                chdir: /tmp
                name:
                  - structlog==23.1.0
                  - tqdm==4.65.0
                virtualenv: /opt/edge-virtualenv
            - name: Get fish shell  # noqa: command-instead-of-shell
              ansible.builtin.shell: command -v fish
              register: fish_shell
            - name: Update Fish user paths  # noqa: command-instead-of-shell
              ansible.builtin.shell:
                cmd: >
                  set -U fish_user_paths
                  /home/github/.cargo/bin
                  /opt/virtualenv/bin
                  /usr/local/bin
                  /usr/lib/ninja-build/bin
                executable: "{{ fish_shell.stdout }}"
        - name: Set fish shell
          ansible.builtin.user:
            name: github
            shell: "{{ fish_shell.stdout }}"
        - name: Download tailscale install script
          ansible.builtin.get_url:
            dest: /tmp/install.sh
            mode: "0640"
            url: https://tailscale.com/install.sh
          tags:
            - debug
            - never
        - name: Ubuntu block
          when: ansible_facts.os_family == 'Ubuntu'
          block:
            - name: Clean apt
              ansible.builtin.apt:
                autoclean: true
                autoremove: true
                clean: true
            - name: Clean apt
              ansible.builtin.apt:
                clean: true
        - name: Remove apt lists
          ansible.builtin.file:
            path: /var/lib/apt/lists
            state: absent
        - name: Remove apk lists
          ansible.builtin.file:
            path: /var/cache/apk
            state: absent
    - name: OSX block
      when: ansible_facts.os_family == 'Darwin'
      block:
        - name: Install pyenv
          community.general.homebrew:
            name: pyenv
        - name: Install Python {{ py_version }}
          ansible.builtin.command: pyenv install {{ py_version }}-dev
          args:
            creates: "{{ lookup('env', 'HOME') }}/.pyenv/versions/{{ py_version }}-dev"
# yamllint enable rule:key-ordering
