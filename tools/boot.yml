---
# yamllint disable rule:key-ordering
- hosts: localhost
  name: Boot localhost for building
  tasks:
    - name: Set Python version
      ansible.builtin.set_fact:
        llvm_version: 15
        py_version: 3.12
    - name: Unix block
      become: true
      when: ansible_facts.os_family != 'Darwin'
      block:
        - name: Install apt packages
          ansible.builtin.apt:
            install_recommends: false
            name:
              - apt
              - apt-transport-https
              - apt-utils
              - aptitude
              - libapt-pkg6.0
            update_cache: true
        - name: Install apt packages
          ansible.builtin.apt:
            install_recommends: false
            name:
              - gnupg
              - lsb-release
              - software-properties-common
              - wget
            update_cache: true
        - name: Download LLVM install
          ansible.builtin.get_url:
            dest: /tmp/llvm.sh
            mode: "0644"
            url: https://apt.llvm.org/llvm.sh
        - name: Install LLVM
          ansible.builtin.script:
            chdir: /tmp
            cmd: /tmp/llvm.sh {{ llvm_version }} all
        - name: Clean LLVM script
          ansible.builtin.file:
            path: /tmp/llvm.sh
            state: absent
        - name: Gather LLVM binaries
          # noqa: command-instead-of-shell
          ansible.builtin.shell: command -v {{ item }}-{{ llvm_version }}
          register: links
          changed_when: links.rc != 0
          with_items:
            - clang
            - clang-format
            - clang-tidy
            - clang++
            - llvm-cov
            - llvm-profdata
            - scan-build
        - name: Create LLVM links
          ansible.builtin.file:
            dest: /usr/local/bin/{{ item.item }}
            src: "{{ item.stdout }}"
            state: link
          loop: "{{ links.results }}"
        - name: Install apt packages
          ansible.builtin.apt:
            install_recommends: false
            name:
              - adduser
              - sudo
            update_cache: true
        - name: Create github group
          ansible.builtin.group:
            gid: 122
            name: github
            state: present
        - name: Create github user
          ansible.builtin.user:
            createhome: true
            group: 122
            name: github
            uid: 1001
        - name: Create sudoers.d directory
          ansible.builtin.file:
            mode: "0770"
            path: /etc/sudoers.d
            state: directory
        - name: Add github to sudoers
          ansible.builtin.lineinfile:
            create: true
            dest: /etc/sudoers.d/github
            line: github ALL=(ALL) NOPASSWD:ALL
            mode: "0440"
        - name: Install build tools
          ansible.builtin.apt:
            install_recommends: false
            name:
              - fish
            state: latest
        - ansible.builtin.file:
            group: github
            owner: github
            path: /opt/virtualenv
            state: directory
        - become_user: github
          block:
            - ansible.builtin.shell: |
                set -e

                git config --global advice.detachedHead true
                git config --global advice.ignoredHook false
                git config --global advice.skippedCherryPicks false
                git config --global checkout.defaultRemote origin
                git config --global core.ignorecase true
                git config --global diff.renameLimit 1522
                git config --global diff.submodule diff
                git config --global fetch.recurseSubmodules false
                git config --global init.defaultBranch stable
                git config --global pull.rebase true
                git config --global push.autoSetupRemote true
                git config --global push.default simple
                git config --global push.recurseSubmodules false
                git config --global rebase.autoSquash true
                git config --global rebase.autoStash true
                git config --global rebase.backend apply
                git config --global rebase.missingCommitsCheck error
                git config --global rebase.updateRefs true
                git config --global status.submoduleSummary true
                git config --global submodule.recurse true

                python{{ py_version }} -m venv /opt/virtualenv
                /opt/virtualenv/bin/pip install --upgrade pip setuptools wheel
                /opt/virtualenv/bin/pip install -r /tmp/requirements.txt
              name: Setup git config and Python virtualenv
            - ansible.builtin.shell: command -v fish
              name: Get fish shell
              register: fish_shell
            - ansible.builtin.shell:
                cmd: set -U fish_user_paths /opt/virtualenv/bin /usr/local/bin
                executable: "{{ fish_shell.stdout }}"
              name: Update Fish user paths
        - ansible.builtin.user:
            name: github
            shell: "{{ fish_shell.stdout }}"
          name: Set fish shell
        - ansible.builtin.get_url:
            dest: /tmp/install.sh
            url: https://tailscale.com/install.sh
          tags:
            - debug
            - never
        - ansible.builtin.apt:
            install_recommends: false
            name:
              - autoconf
              - automake
              - base-files
              - base-passwd
              - bash
              - brz
              - bsdutils
              - build-essential
              - bzip2
              - bzr
              - ca-certificates
              - ccache
              - cmake
              - coreutils
              - curl
              - dash
              - debconf
              - debianutils
              - default-libmysqlclient-dev
              - diffutils
              - dirmngr
              - docker
              - dpkg
              - dpkg-dev
              - e2fsprogs
              - fdisk
              - file
              - findutils
              - gcc-12-base
              - gettext
              - git
              - git-lfs
              - gnupg
              - gnupg-agent
              - gpgv
              - grep
              - gzip
              - hostname
              - htop
              - imagemagick
              - imagemagick-6.q16
              - init-system-helpers
              - jq
              - less
              - libacl1
              - libattr1
              - libaudit-common
              - libaudit1
              - libblkid1
              - libbz2-1.0
              - libbz2-dev
              - libc-bin
              - libc6
              - libcap-ng0
              - libcap2
              - libcom-err2
              - libcrypt1
              - libcurl4-openssl-dev
              - libdb-dev
              - libdb5.3
              - libdebconfclient0
              - libdpkg-perl
              - libevent-dev
              - libext2fs2
              - libfdisk1
              - libffi-dev
              - libffi8
              - libgcc-s1
              - libgcrypt20
              - libgdbm-dev
              - libglib2.0-0
              - libglib2.0-dev
              - libgmp-dev
              - libgmp10
              - libgnutls30
              - libgpg-error0
              - libgssapi-krb5-2
              - libhogweed6
              - libidn2-0
              - libjpeg-dev
              - libk5crypto3
              - libkeyutils1
              - libkrb5-3
              - libkrb5-dev
              - libkrb5support0
              - liblz4-1
              - liblzma-dev
              - liblzma5
              - libmagickcore-6.q16-6
              - libmagickcore-dev
              - libmagickwand-dev
              - libmaxminddb-dev
              - libmount1
              - libncurses5-dev
              - libncurses6
              - libncursesw5-dev
              - libncursesw6
              - libnettle8
              - libnsl2
              - libp11-kit0
              - libpam-modules
              - libpam-modules-bin
              - libpam-runtime
              - libpam0g
              - libpcre2-8-0
              - libpcre3
              - libpng-dev
              - libpq-dev
              - libprocps8
              - libreadline-dev
              - libsasl2-2
              - libseccomp2
              - libselinux1
              - libsemanage-common
              - libsemanage2
              - libsepol2
              - libsmartcols1
              - libsqlite3-dev
              - libss2
              - libssl-dev
              - libssl3
              - libstdc++6
              - libsystemd0
              - libtasn1-6
              - libtinfo6
              - libtirpc-common
              - libtirpc3
              - libtool
              - libudev1
              - libunistring2
              - libuuid1
              - libwebp-dev
              - libwmf0.2-7
              - libxml2-dev
              - libxslt1-dev
              - libxxhash0
              - libyaml-dev
              - libzstd1
              - locales
              - login
              - logsave
              - lsb-base
              - lsb-release
              - lsof
              - make
              - man-db
              - mawk
              - moreutils
              - mount
              - multitail
              - ncurses-base
              - ncurses-bin
              - netbase
              - ninja-build
              - openssh-client
              - passwd
              - patch
              - perl-base
              - procps
              - python3-venv
              - ripgrep
              - sed
              - sensible-utils
              - software-properties-common
              - ssl-cert
              - stow
              - sysvinit-utils
              - tar
              - time
              - ubuntu-keyring
              - unzip
              - usrmerge
              - util-linux
              - wget
              - xz-utils
              - zip
              - zlib1g
              - zlib1g-dev
        - name: Create directory for virtualenv
          ansible.builtin.file:
            group: github
            mode: "0755"
            owner: github
            path: /opt/virtualenv
            state: directory
        - name: Run user scoped tasks
          become_user: github
          block:
            - name: Setup git config and Python virtualenv
              ansible.builtin.shell: |
                set -e
                git config --global advice.detachedHead true
                git config --global advice.ignoredHook false
                git config --global advice.skippedCherryPicks false
                git config --global checkout.defaultRemote origin
                git config --global core.ignorecase true
                git config --global diff.renameLimit 1522
                git config --global diff.submodule diff
                git config --global fetch.recurseSubmodules false
                git config --global init.defaultBranch stable
                git config --global pull.rebase true
                git config --global push.autoSetupRemote true
                git config --global push.default simple
                git config --global push.recurseSubmodules false
                git config --global rebase.autoSquash true
                git config --global rebase.autoStash true
                git config --global rebase.backend apply
                git config --global rebase.missingCommitsCheck error
                git config --global rebase.updateRefs true
                git config --global status.submoduleSummary true
                git config --global submodule.recurse true
                python{{ py_version }} -m venv /opt/virtualenv
                /opt/virtualenv/bin/pip install --upgrade pip setuptools wheel
                /opt/virtualenv/bin/pip install -r /tmp/requirements.txt
              register: result
              changed_when: result.stdout | length != 0
            - name: Get fish shell
              # noqa: command-instead-of-shell
              ansible.builtin.shell: command -v fish
              register: fish_shell
              changed_when: fish_shell.stdout | length != 0
            - name: Update Fish user paths
              # noqa: command-instead-of-shell
              ansible.builtin.shell:
                cmd: set -U fish_user_paths /opt/virtualenv/bin /usr/local/bin
                executable: "{{ fish_shell.stdout }}"
              register: result
              changed_when: result.stdout | length == 0
        - name: Set fish shell
          ansible.builtin.user:
            name: github
            shell: "{{ fish_shell.stdout }}"
        - name: Download tailscale install script
          ansible.builtin.get_url:
            dest: /tmp/install.sh
            mode: "0644"
            url: https://tailscale.com/install.sh
          tags:
            - debug
            - never
        - name: Clean apt
          ansible.builtin.apt:
            autoclean: true
            autoremove: true
            clean: true
        - name: Clean apt
          ansible.builtin.apt:
            clean: true
        - name: Remove apt lists
          ansible.builtin.file:
            path: /var/lib/apt/lists
            state: absent
    - name: OSX block
      when: ansible_facts.os_family == 'Darwin'
      block:
        - name: Install pyenv
          community.general.homebrew:
            name: pyenv
        - name: Install Python {{ py_version }}
          ansible.builtin.command: pyenv install {{ py_version }}-dev
          args:
            creates: "{{ lookup('env', 'HOME') }}/.pyenv/versions/{{ py_version }}-dev"
# yamllint enable rule:key-ordering
