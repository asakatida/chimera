---
env:
  CLANG_VERSION: "15"
  CMAKE_EXPORT_COMPILE_COMMANDS: "YES"

jobs:
  clangformat:
    concurrency:
      cancel-in-progress: ${{ github.ref != 'refs/heads/stable' }}
      group: ${{ github.workflow }}-${{ github.ref }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: DoozyX/clang-format-lint-action@v0.14
        with:
          clangFormatVersion: 14
          extensions: cpp,h,hpp
  clangtidy:
    concurrency:
      cancel-in-progress: ${{ github.ref != 'refs/heads/stable' }}
      group: ${{ matrix.lints }}-${{ github.workflow }}-${{ github.ref }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.0.2
        with:
          submodules: true
      - name: Cache
        uses: actions/cache@v3.0.8
        with:
          # yamllint disable-line rule:line-length
          key: build-${{ hashFiles('CMakeLists.txt') }}-${{ env.CLANG_VERSION }}-v1
          path: build
      - run: >
          wget https://apt.llvm.org/llvm.sh &&
          chmod +x llvm.sh &&
          sudo ./llvm.sh ${{ env.CLANG_VERSION }} all &&
          rm -rf llvm.sh &&
          sudo apt-get install -y ninja-build
      - env:
          CC: /usr/bin/clang-${{ env.CLANG_VERSION }}
          CXX: /usr/bin/clang++-${{ env.CLANG_VERSION }}
        name: Configure CMake
        run: >
          git -C external/Catch/ apply ${{ github.workspace }}/patches/Catch &&
          cmake -GNinja -B build -S .
        working-directory: ${{ github.workspace }}
      - if: matrix.lints
        name: Lint c++ code
        run: >
          find . -name '*.cpp' -print0 |
          xargs --null --
          git ls-tree --full-tree --name-only -z HEAD -- |
          xargs --null --
          clang-tidy-${{ env.CLANG_VERSION }} -p=build -checks=-*,${{ matrix.lints }}
        working-directory: ${{ github.workspace }}
      - if: ${{ !matrix.lints }}
        name: Lint c++ code
        run: >
          find . -name '*.cpp' -print0 |
          xargs --null --
          git ls-tree --full-tree --name-only -z HEAD -- |
          xargs --null --
          clang-tidy-${{ env.CLANG_VERSION }} -p=build
        working-directory: ${{ github.workspace }}
    strategy:
      matrix:
        lints:
          - false
          - bugprone-*,-bugprone-easily-swappable-parameters,-bugprone-exception-escape
          - cert-*
          - clang-*
          - concurrency-*
          - cppcoreguidelines-*
          - hicpp-*
          - misc-*,-misc-confusable-identifiers,-misc-no-recursion
          - misc-confusable-identifiers
          - modernize-*
          - performance-*
          - portability-*
          - readability-*,-readability-identifier-length,-readability-static-accessed-through-instance

name: ClangTidy

# yamllint disable-line rule:truthy
on:
  pull_request:
    branches:
      - stable
    paths:
      - .github/workflows/clang-tidy.yml
      - "**.cpp"
      - "**.hpp"
      - "**.h"
      - .clang-format
      - .clang-tidy
      - CMakeLists.txt
  push:
    branches:
      - stable
    paths:
      - .github/workflows/clang-tidy.yml
      - "**.cpp"
      - "**.hpp"
      - "**.h"
      - .clang-format
      - .clang-tidy
      - CMakeLists.txt
  workflow_dispatch: ~
