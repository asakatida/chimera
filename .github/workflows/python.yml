---
env:
  CLANG_VERSION: 14

jobs:
  cmakelint:
    concurrency:
      cancel-in-progress: ${{ github.ref != 'refs/heads/stable' }}
      group: cmakelint-${{ github.workflow }}-${{ github.ref }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.1.0
      - name: Cache
        uses: actions/cache@v3.0.10
        with:
          key: python3-${{ hashFiles('requirements.txt') }}
          path: env
      - name: Build dev tools
        run: >
          python3 -m venv --upgrade --upgrade-deps env &&
          env/bin/pip3 install --upgrade pip setuptools wheel &&
          env/bin/pip3 install -r requirements.txt
        working-directory: ${{ github.workspace }}
      - name: Lint CMakeList.txt
        run: env/bin/cmakelint
        working-directory: ${{ github.workspace }}
  mypy:
    concurrency:
      cancel-in-progress: ${{ github.ref != 'refs/heads/stable' }}
      group: mypy-${{ github.workflow }}-${{ github.ref }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.1.0
      - name: Cache
        uses: actions/cache@v3.0.10
        with:
          key: python3.12-${{ hashFiles('requirements.txt') }}
          path: env
      - uses: deadsnakes/action@v2.1.1
        with:
          python-version: 3.12-dev
      - name: Build dev tools
        run: >
          python3.12 -m venv --upgrade --upgrade-deps env &&
          env/bin/pip3 install --upgrade pip setuptools wheel &&
          env/bin/pip3 install -r requirements.txt
        working-directory: ${{ github.workspace }}
      - name: Lint python code
        run: >
          tools/g-ls-tree.sh -not -path './stdlib/*' -name '*.py' |
          xargs --no-run-if-empty --null --
          env/bin/mypy
        working-directory: ${{ github.workspace }}
  python:
    concurrency:
      cancel-in-progress: ${{ github.ref != 'refs/heads/stable' }}
      group: ${{ matrix.lints }}-${{ github.workflow }}-${{ github.ref }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.1.0
      - name: Cache
        uses: actions/cache@v3.0.10
        with:
          key: python3.12-${{ hashFiles('requirements.txt') }}
          path: env
      - uses: deadsnakes/action@v2.1.1
        with:
          python-version: 3.12-dev
      - name: Build dev tools
        run: >
          python3.12 -m venv --upgrade --upgrade-deps env &&
          env/bin/pip3 install --upgrade pip setuptools wheel &&
          env/bin/pip3 install -r requirements.txt
        working-directory: ${{ github.workspace }}
      - name: Lint python code
        run: >
          tools/g-ls-tree.sh -name '*.py' |
          xargs --no-run-if-empty --null --
          env/bin/${{ matrix.lints }}
        working-directory: ${{ github.workspace }}
    strategy:
      matrix:
        lints:
          - black --check --diff --preview --target-version py311
          - isort --check-only --python-version auto
          - pylama
  requirements_txt:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.1.0
      - name: Build dev tools
        run: >
          python3 -m venv --upgrade --upgrade-deps env &&
          env/bin/pip3 install --upgrade pip setuptools wheel &&
          env/bin/pip3 install -r requirements.txt
        working-directory: ${{ github.workspace }}
      - name: Freeze dependencies
        run: >
          env/bin/pip3 freeze | grep -v -e '^pkg_resources==' >requirements.txt
        working-directory: ${{ github.workspace }}
      - if: ${{ github.ref == 'refs/heads/stable' }}
        uses: stefanzweifel/git-auto-commit-action@v4.15.1
        with:
          branch: requirements-txt
          commit_message: Update requirements.txt.
          create_branch: true
          file_pattern: requirements.txt
          repository: ${{ github.workspace }}
  utf8_generate:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.1.0
      - name: Cache
        uses: actions/cache@v3.0.10
        with:
          key: python3.12-${{ hashFiles('requirements.txt') }}
          path: env
      - uses: deadsnakes/action@v2.1.1
        with:
          python-version: 3.12-dev
      - name: Build dev tools
        run: >
          python3.12 -m venv --upgrade --upgrade-deps env &&
          env/bin/pip3 install --upgrade pip setuptools wheel &&
          env/bin/pip3 install -r requirements.txt
        working-directory: ${{ github.workspace }}
      - run: >
          wget https://apt.llvm.org/llvm.sh &&
          chmod +x llvm.sh &&
          sudo ./llvm.sh ${{ env.CLANG_VERSION }} all &&
          rm -rf llvm.sh
      - name: generate utf8 grammar
        run: >
          find tools -name 'generate_utf8_*.py' -not -name '*insane*' -print0 |
          xargs --no-run-if-empty --null -n1 -P3 --
          env/bin/python3 &&
          tools/g-ls-tree.sh -name '*.hpp' |
          xargs --no-run-if-empty --null --
          clang-format-${{ env.CLANG_VERSION }} -style=file -i
        working-directory: ${{ github.workspace }}
      - if: ${{ github.ref == 'refs/heads/stable' }}
        uses: stefanzweifel/git-auto-commit-action@v4.15.1
        with:
          branch: utf8-generate-grammar
          commit_message: Update utf8 grammar.
          create_branch: true
          file_pattern: library/grammar
          repository: ${{ github.workspace }}

name: Python

# yamllint disable-line rule:truthy
on:
  pull_request:
    branches:
      - stable
    paths:
      - .github/workflows/python.yml
      - "**.py"
      - cmake/**
      - CMakeList.txt
      - requirements.txt
  push:
    branches:
      - stable
    paths:
      - .github/workflows/python.yml
      - "**.py"
      - cmake/**
      - CMakeList.txt
      - requirements.txt
  workflow_dispatch: ~
