---
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  CLANG_VERSION: 15

jobs:
  cmake:
    concurrency:
      cancel-in-progress: true
      group: ${{ matrix.targets }}-${{ github.workflow }}-${{ github.ref }}
    runs-on: ubuntu-latest
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Cache
        uses: actions/cache@v3.0.2
        with:
          # An explicit key for restoring and saving the cache
          key: build
          # A list of files, directories, and wildcard patterns to cache and restore
          path: build
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          restore-keys: build
          # The chunk size used to split up large files during upload, in bytes
          upload-chunk-size: 4000000
      - run: wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && sudo ./llvm.sh ${{env.CLANG_VERSION}} && rm -rf llvm.sh
      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: CC=/usr/bin/clang-${{env.CLANG_VERSION}} CXX=/usr/bin/clang++-${{env.CLANG_VERSION}} cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        working-directory: ${{github.workspace}}
      - if: matrix.targets == 'check'
        name: Build dev tools
        run: make
        working-directory: ${{github.workspace}}/build
      - continue-on-error: ${{ github.ref == 'refs/heads/stable' && matrix.targets != 'check' && matrix.targets != 'check_rand' }}
        name: Test
        run: make ${{matrix.targets}}
        working-directory: ${{github.workspace}}/build
      - if: github.ref == 'refs/heads/stable'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: ${{ hashFiles(unit_tests/fuzz/corpus/*) }}
          commit_message: Update fuzzing corpus.
          create_branch: true
          file_pattern: unit_tests/fuzz/corpus/*
          repository: ${{ github.workspace }}
    strategy:
      fail-fast: false
      matrix:
        targets:
          - check
          - check_rand
          - corpus
          - corpus-ellipsis
          - corpus-false
          - corpus-keywords
          - corpus-name
          - corpus-none
          - corpus-number
          - corpus-string
          - corpus-true

name: CMake

# yamllint disable-line rule:truthy
on:
  pull_request:
    branches:
      - stable
  push:
    branches:
      - stable
  workflow_dispatch: ~
