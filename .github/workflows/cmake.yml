---
env:
  CMAKE_BUILD_TYPE: Debug
  CPPFLAGS: -DCHIMERA_PATH="/github/workspace/stdlib"
  CXXFLAGS: >
    -fsanitize-coverage=no-prune
    -fsanitize-coverage=trace-cmp
    -fsanitize-coverage=trace-div
    -fsanitize-coverage=trace-gep
    -fsanitize-coverage=trace-loads
    -fsanitize-coverage=trace-stores
  LDFLAGS: ""

jobs:
  corpus:
    concurrency:
      cancel-in-progress: &not_stable ${{ github.ref != 'refs/heads/stable' }}
      group: corpus-${{ github.workflow }}-${{ github.ref }}
    runs-on: &runs_on ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          submodules: true
      - name: CCache
        uses: actions/cache@v3.2.6
        with:
          key: corpus-${{ github.run_id }}
          path: .ccache
          restore-keys: |
            corpus-
            build-
      - name: Run regression
        uses: ./
        with:
          run: &build_regression |
            cmake -GNinja -B build -S .
            python tools/ninja.py build check-rand regression
      - if: github.ref == 'refs/heads/stable'
        name: Run corpus
        uses: ./
        with:
          run: |
            python tools/ninja.py build -k0 corpus || true
            git config --global user.email email
            git config --global user.name name
            python tools/corpus_gather.py
            set +e
            for opt in --global --local --system --worktree; do
              git config "${opt}" --unset-all user.email
              git config "${opt}" --unset-all user.name
            done
            exit 0
      - name: Corpus merge
        uses: ./
        with:
          run: python tools/corpus_merge.py
      - name: Corpus trim
        uses: ./
        with:
          run: python tools/corpus_trim.py
      - name: Run regression
        uses: ./
        with:
          run: ninja -C build -j1 regression
      - continue-on-error: *not_stable
        uses: stefanzweifel/git-auto-commit-action@v4.16.0
        with:
          branch: regression-${{ github.workflow }}-${{ github.ref }}/${{ github.run_id }}
          commit_message: Update fuzzing corpus.
          create_branch: true
          file_pattern: unit_tests/fuzz
          repository: ${{ github.workspace }}
  debug:
    concurrency:
      cancel-in-progress: *not_stable
      group: debug-${{ github.workflow }}-${{ github.ref }}
    env:
      CMAKE_BUILD_TYPE: Debug
      CXXFLAGS: ""
    runs-on: *runs_on
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          submodules: true
      - name: CCache
        uses: actions/cache@v3.2.6
        with:
          key: debug-${{ github.run_id }}
          path: .ccache
          restore-keys: |
            debug-
            build-
      - name: Run regression
        uses: ./
        with:
          run: *build_regression
  libcpp:
    concurrency:
      cancel-in-progress: *not_stable
      group: libcpp-${{ github.workflow }}-${{ github.ref }}
    runs-on: *runs_on
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          submodules: true
      - name: CCache
        uses: actions/cache@v3.2.6
        with:
          key: libcpp-${{ github.run_id }}
          path: .ccache
          restore-keys: |
            libcpp-
            build-
      - env:
          CMAKE_BUILD_TYPE: RelWithDebInfo
          CPPFLAGS: -stdlib=libc++
          CXXFLAGS: -stdlib=libc++
          LDFLAGS: -stdlib=libc++
        name: Build fuzzers
        uses: ./
        with:
          run: |
            cmake -GNinja -B build -S .
            ninja -C build -j2 check-rand
  regression:
    concurrency:
      cancel-in-progress: *not_stable
      group: regression-${{ github.workflow }}-${{ github.ref }}
    runs-on: *runs_on
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          submodules: true
      - name: CCache
        uses: actions/cache@v3.2.6
        with:
          key: regression-${{ github.run_id }}
          path: .ccache
          restore-keys: |
            regression-
            build-
      - name: Build fuzzers
        uses: ./
        with:
          run: |
            cmake -GNinja -B build -S .
            ninja -C build -j1 fuzzers
      - name: Corpus regression
        uses: ./
        with:
          run: python tools/corpus_regression.py
      - name: Corpus trim
        uses: ./
        with:
          run: python tools/corpus_trim.py
      - name: Run regression
        uses: ./
        with:
          run: ninja -C build -j1 regression
      - continue-on-error: *not_stable
        uses: stefanzweifel/git-auto-commit-action@v4.16.0
        with:
          branch: update-fuzz-${{ github.ref }}/${{ github.run_id }}
          commit_message: Update fuzzing corpus.
          create_branch: true
          file_pattern: unit_tests/fuzz
          repository: ${{ github.workspace }}
  release:
    concurrency:
      cancel-in-progress: *not_stable
      group: release-${{ github.workflow }}-${{ github.ref }}
    env:
      CMAKE_BUILD_TYPE: Release
      CXXFLAGS: ""
    runs-on: *runs_on
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          submodules: true
      - name: CCache
        uses: actions/cache@v3.2.6
        with:
          key: release-${{ github.run_id }}
          path: .ccache
          restore-keys: |
            release-
            build-
      - name: Run regression
        uses: ./
        with:
          run: *build_regression
  scan-build:
    concurrency:
      cancel-in-progress: *not_stable
      group: scan-build-${{ github.workflow }}-${{ github.ref }}
    runs-on: *runs_on
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          submodules: true
      - name: Scan Build
        uses: ./
        with:
          run: >
            scan-build
            --use-cc "${CC}"
            --use-c++ "${CXX}"
            bash -c '
              set -e -o pipefail
              cmake -GNinja -B build -S .
              python tools/ninja.py build
            '
            ! find /tmp -type d -name 'scan-build-*'

name: CMake

# yamllint disable-line rule:truthy
on:
  pull_request:
    paths: &paths
      - .github/ccache/**
      - .github/workflows/cmake.yml
      - "**.cpp"
      - "**.h"
      - "**.hpp"
      - "**.py"
      - action.yml
      - cmake/**
      - CMakeLists.txt
      - external/**
      - requirements.core.txt
      - requirements.txt
  push:
    branches:
      - stable
    paths: *paths
  workflow_dispatch: ~
