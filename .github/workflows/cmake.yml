name: CMake

on:
  push:
    branches: [ stable ]
  pull_request:
    branches: [ stable ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Cache
      uses: actions/cache@v3.0.2
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: build
        # An explicit key for restoring and saving the cache
        key: build
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: build
        # The chunk size used to split up large files during upload, in bytes
        upload-chunk-size: 4000000
    - run: wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && sudo ./llvm.sh 14 && rm -rf llvm.sh
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      working-directory: ${{github.workspace}}
      run: CC=/usr/bin/clang-14 CXX=/usr/bin/clang++-14 cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    - name: Build dev tools
      working-directory: ${{github.workspace}}/build
      run: make -k
      continue-on-error: true
    - name: Build
      working-directory: ${{github.workspace}}/build
      run: make fuzz fuzz2 unit_test
    - name: Test
      working-directory: ${{github.workspace}}/build
      run: make check
    - uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: path/to/artifact/world.txt
