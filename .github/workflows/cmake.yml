---
env:
  CPPFLAGS: -DCHIMERA_PATH="/github/workspace/stdlib"
jobs:
  corpus-retest:
    concurrency:
      cancel-in-progress: ${{ github.ref != 'refs/heads/stable' }}
      group: corpus-${{ github.workflow }}-${{ github.ref }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          filter: tree:0
          submodules: true
      - name: Build project
        uses: ./
        with:
          run: |
            rustup default stable
            cmake -GNinja -B build -S .
            python tools/ninja.py build fuzzers
      - env:
          GITHUB_REF: ${{ github.ref }}
        name: Corpus recheck
        uses: ./
        with:
          run: |
            python tools/crash_reset.py
            python tools/corpus_gather.py "${GITHUB_REF}"
            python tools/corpus_retest.py build
            BASE_REF=HEAD python tools/corpus_freeze.py unit_tests/fuzz/cases.json
      - if: github.ref == 'refs/heads/stable'
        name: Run corpus
        uses: ./
        with:
          run: |
            python tools/ninja.py build corpus
            python tools/corpus_retest.py build
      - name: Corpus baseline
        uses: ./
        with:
          run: |
            git restore --staged unit_tests/fuzz/corpus
            git restore --worktree unit_tests/fuzz/corpus
      - continue-on-error: ${{ github.ref != 'refs/heads/stable' }}
        uses: stefanzweifel/git-auto-commit-action@v5.0.0
        with:
          branch: corpus-${{ github.run_id }}
          commit_message: Update fuzzing corpus.
          create_branch: true
          file_pattern: unit_tests/fuzz
          repository: ${{ github.workspace }}
  debug:
    concurrency:
      cancel-in-progress: ${{ github.ref != 'refs/heads/stable' }}
      group: debug-${{ github.workflow }}-${{ github.ref }}
    env:
      CXXFLAGS: -O0 -g -pedantic -DDEBUG -Wall -Wdeprecated -Werror -Wextra -Wpedantic
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          filter: tree:0
          submodules: true
      - name: Run tests
        uses: ./
        with:
          run: |
            rustup default stable
            cmake -GNinja -B build -S .
            python tools/ninja.py build unit-test
            python tools/ninja.py build test
  libcpp:
    concurrency:
      cancel-in-progress: ${{ github.ref != 'refs/heads/stable' }}
      group: libcpp-${{ github.workflow }}-${{ github.ref }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          filter: tree:0
          submodules: true
      - env:
          CMAKE_BUILD_TYPE: RelWithDebInfo
          CXXFLAGS: -stdlib=libc++
        name: Basic unit tests
        uses: ./
        with:
          run: |
            rustup default stable
            cmake -GNinja -B build -S .
            python tools/ninja.py build unit-test
            python tools/ninja.py build test
  release:
    concurrency:
      cancel-in-progress: ${{ github.ref != 'refs/heads/stable' }}
      group: release-${{ github.workflow }}-${{ github.ref }}
    env:
      CMAKE_BUILD_TYPE: Release
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          filter: tree:0
          submodules: true
      - name: Run tests
        uses: ./
        with:
          run: |
            rustup default stable
            cmake -GNinja -B build -S .
            python tools/ninja.py build unit-test
            python tools/ninja.py build test

name: CMake

# yamllint disable-line rule:truthy
on:
  pull_request:
    paths:
      - .github/workflows/cmake.yml
      - "**.cpp"
      - "**.h"
      - "**.hpp"
      - "**.py"
      - action.yml
      - cmake/**
      - CMakeLists.txt
      - external/**
      - oxidation/**
      - requirements.txt
      - tools/requirements.txt
      - unit_tests/fuzz/cases.json
  push:
    branches:
      - stable
    paths:
      - .github/workflows/cmake.yml
      - "**.cpp"
      - "**.h"
      - "**.hpp"
      - "**.py"
      - action.yml
      - cmake/**
      - CMakeLists.txt
      - external/**
      - oxidation/**
      - requirements.txt
      - tools/requirements.txt
      - unit_tests/fuzz/cases.json
  workflow_dispatch: ~
