---
env:
  CMAKE_BUILD_TYPE: Debug
  CPPFLAGS: -DCHIMERA_PATH="/github/workspace/stdlib"
  CXXFLAGS: >
    -fsanitize-coverage=no-prune
    -fsanitize-coverage=trace-cmp
    -fsanitize-coverage=trace-div
    -fsanitize-coverage=trace-gep
    -fsanitize-coverage=trace-loads
    -fsanitize-coverage=trace-stores
  LDFLAGS: ""

jobs:
  corpus-new:
    concurrency:
      cancel-in-progress: ${{ github.ref != 'refs/heads/stable' }}
      group: corpus-new-${{ github.workflow }}-${{ github.ref }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0
          submodules: true
      - name: CCache
        uses: actions/cache@v3.3.1
        with:
          key: corpus-new-${{ github.run_id }}
          path: .ccache
          restore-keys: corpus-new-
      - name: Build project
        uses: ./
        with:
          run: |
            rustup default stable
            cmake -GNinja -B build -S .
            python tools/ninja.py build
      - if: github.ref == 'refs/heads/stable'
        name: Run corpus
        uses: ./
        with:
          run: python tools/ninja.py build corpus
      - name: Corpus recheck
        uses: ./
        with:
          run: python tools/corpus_retest.py build
      - name: Corpus recheck
        uses: ./
        with:
          run: |
            git remote set-head origin --auto
            python tools/corpus_merge.py
      - name: Corpus baseline
        uses: ./
        with:
          run: |
            git fetch
            git remote set-head origin --auto
            git restore --source origin/HEAD --staged unit_tests/fuzz/corpus
            git restore --worktree unit_tests/fuzz/corpus
            python tools/corpus_trim.py
            ccache --cleanup
            ccache --trim-dir .ccache/remote --trim-max-size 600Mi
      - continue-on-error: ${{ github.ref != 'refs/heads/stable' }}
        uses: stefanzweifel/git-auto-commit-action@v4.16.0
        with:
          branch: corpus-new-${{ github.run_id }}
          commit_message: Update fuzzing corpus.
          create_branch: true
          file_pattern: unit_tests/fuzz
          repository: ${{ github.workspace }}
  corpus-retest:
    concurrency:
      cancel-in-progress: ${{ github.ref != 'refs/heads/stable' }}
      group: corpus-retest-${{ github.workflow }}-${{ github.ref }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.5.2
        with:
          submodules: true
      - name: CCache
        uses: actions/cache@v3.3.1
        with:
          key: corpus-retest-${{ github.run_id }}
          path: .ccache
          restore-keys: corpus-retest-
      - name: Build project
        uses: ./
        with:
          run: |
            rustup default stable
            cmake -GNinja -B build -S .
            python tools/ninja.py build
      - name: Gather crashes for recheck
        uses: ./
        with:
          run: python tools/crash_reset.py
      - name: Corpus recheck
        uses: ./
        with:
          run: python tools/corpus_retest.py build
      - name: Corpus baseline
        uses: ./
        with:
          run: |
            git fetch
            git remote set-head origin --auto
            git restore --source origin/HEAD --staged unit_tests/fuzz/corpus
            git restore --worktree unit_tests/fuzz/corpus
            python tools/corpus_trim.py
            ccache --cleanup
            ccache --trim-dir .ccache/remote --trim-max-size 600Mi
      - continue-on-error: ${{ github.ref != 'refs/heads/stable' }}
        uses: stefanzweifel/git-auto-commit-action@v4.16.0
        with:
          branch: corpus-retest-${{ github.run_id }}
          commit_message: Update fuzzing corpus.
          create_branch: true
          file_pattern: unit_tests/fuzz
          repository: ${{ github.workspace }}
  debug:
    concurrency:
      cancel-in-progress: ${{ github.ref != 'refs/heads/stable' }}
      group: debug-${{ github.workflow }}-${{ github.ref }}
    env:
      CMAKE_BUILD_TYPE: Debug
      CXXFLAGS: ""
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.5.2
        with:
          submodules: true
      - name: CCache
        uses: actions/cache@v3.3.1
        with:
          key: debug-${{ github.run_id }}
          path: .ccache
          restore-keys: debug-
      - name: Run regression
        uses: ./
        with:
          run: |
            rustup default stable
            cmake -GNinja -B build -S .
            python tools/ninja.py build check-rand regression
            ccache --cleanup
            ccache --trim-dir .ccache/remote --trim-max-size 600Mi
  gather:
    concurrency:
      cancel-in-progress: ${{ github.ref != 'refs/heads/stable' }}
      group: gather-${{ github.workflow }}-${{ github.ref }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0
          submodules: true
      - name: CCache
        uses: actions/cache@v3.3.1
        with:
          key: gather-${{ github.run_id }}
          path: .ccache
          restore-keys: gather-
      - name: Corpus gather
        uses: ./
        with:
          run: |
            python tools/corpus_gather.py ${{ github.ref }}
            ccache --cleanup
            ccache --trim-dir .ccache/remote --trim-max-size 600Mi
      - uses: stefanzweifel/git-auto-commit-action@v4.16.0
        with:
          branch: gather-${{ github.run_id }}
          commit_message: Update fuzzing corpus.
          create_branch: true
          file_pattern: unit_tests/fuzz
          repository: ${{ github.workspace }}
  libcpp:
    concurrency:
      cancel-in-progress: ${{ github.ref != 'refs/heads/stable' }}
      group: libcpp-${{ github.workflow }}-${{ github.ref }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.5.2
        with:
          submodules: true
      - name: CCache
        uses: actions/cache@v3.3.1
        with:
          key: libcpp-${{ github.run_id }}
          path: .ccache
          restore-keys: libcpp-
      - env:
          CMAKE_BUILD_TYPE: RelWithDebInfo
          CPPFLAGS: -stdlib=libc++
          CXXFLAGS: -stdlib=libc++
          LDFLAGS: -stdlib=libc++
        name: Basic unit tests
        uses: ./
        with:
          run: |
            rustup default stable
            cmake -GNinja -B build -S .
            ninja -C build -j2 check-rand
            ccache --cleanup
            ccache --trim-dir .ccache/remote --trim-max-size 600Mi
  release:
    concurrency:
      cancel-in-progress: ${{ github.ref != 'refs/heads/stable' }}
      group: release-${{ github.workflow }}-${{ github.ref }}
    env:
      CMAKE_BUILD_TYPE: Release
      CXXFLAGS: ""
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.5.2
        with:
          submodules: true
      - name: CCache
        uses: actions/cache@v3.3.1
        with:
          key: release-${{ github.run_id }}
          path: .ccache
          restore-keys: release-
      - name: Run regression
        uses: ./
        with:
          run: |
            rustup default stable
            cmake -GNinja -B build -S .
            python tools/ninja.py build check-rand regression
            ccache --cleanup
            ccache --trim-dir .ccache/remote --trim-max-size 600Mi
  scan-build:
    concurrency:
      cancel-in-progress: ${{ github.ref != 'refs/heads/stable' }}
      group: scan-build-${{ github.workflow }}-${{ github.ref }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.5.2
        with:
          submodules: true
      - name: Scan Build
        uses: ./
        with:
          run: >
            scan-build
            --use-cc "${CC}"
            --use-c++ "${CXX}"
            bash -c '
              set -e -o pipefail
              rustup default stable
              cmake -GNinja -B build -S .
              python tools/ninja.py build
            '
            ! find /tmp -type d -name 'scan-build-*'

name: CMake

# yamllint disable-line rule:truthy
on:
  pull_request:
    paths:
      - .github/ccache/**
      - .github/workflows/cmake.yml
      - "**.cpp"
      - "**.h"
      - "**.hpp"
      - "**.py"
      - action.yml
      - cmake/**
      - CMakeLists.txt
      - external/**
      - oxidation/**
      - requirements.core.txt
      - requirements.txt
      - unit_tests/fuzz/cases.json
  push:
    branches:
      - stable
    paths:
      - .github/ccache/**
      - .github/workflows/cmake.yml
      - "**.cpp"
      - "**.h"
      - "**.hpp"
      - "**.py"
      - action.yml
      - cmake/**
      - CMakeLists.txt
      - external/**
      - oxidation/**
      - requirements.core.txt
      - requirements.txt
      - unit_tests/fuzz/cases.json
  workflow_dispatch: ~
